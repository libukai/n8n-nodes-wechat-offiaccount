meta {
  name: Open Article Comment
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/cgi-bin/comment/open?access_token={{accessToken}}
  body: json
  auth: none
}

body:json {
  {
    "msg_data_id": 123456789,
    "index": 0
  }
}

docs {
  # Open Article Comment

  Enable comments for a published article.

  ## Endpoint
  `POST /cgi-bin/comment/open`

  ## Parameters
  - `msg_data_id` (required): Message data ID from publish response
  - `index` (optional): Article index in multi-article (0-based, default 0)

  ## Response
  ```json
  {
    "errcode": 0,
    "errmsg": "ok"
  }
  ```

  ## Notes
  - Comments must be enabled within 48 hours of article publication
  - For single article: index = 0 or omit
  - For multi-article: specify which article to enable comments
  - Users can leave comments after enabling
  - Can be closed later using close API

  ## Requirements
  - Article must be published via publish API
  - Must have valid msg_data_id from publish response
  - Cannot reopen after closing
}

script:pre-request {
  const axios = require('axios');
  const baseUrl = bru.getEnvVar('baseUrl');
  const appId = bru.getEnvVar('appId');
  const appSecret = bru.getEnvVar('appSecret');

  const tokenResponse = await axios.post(`${baseUrl}/cgi-bin/stable_token`, {
    grant_type: 'client_credential',
    appid: appId,
    secret: appSecret
  });

  if (tokenResponse.data.access_token) {
    bru.setVar('accessToken', tokenResponse.data.access_token);
    console.log('✓ Access token obtained:', tokenResponse.data.access_token.substring(0, 20) + '....');
  } else {
    console.error('✗ Failed to get access token:', tokenResponse.data);
  }
}

tests {
  test("Status code is 200", function() {
    expect(res.status).to.equal(200);
  });

  test("errcode is 0", function() {
    expect(res.body.errcode).to.equal(0);
  });
}

script:post-response {
  if (res.body.errcode === 0) {
    console.log('✓ Article comments opened successfully');
  } else {
    console.error('✗ Failed to open comments');
    console.error('Error:', res.body.errcode, res.body.errmsg);
  }
}
