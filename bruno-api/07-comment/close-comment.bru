meta {
  name: Close Article Comment
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/cgi-bin/comment/close?access_token={{accessToken}}
  body: json
  auth: none
}

body:json {
  {
    "msg_data_id": 123456789,
    "index": 0
  }
}

docs {
  # Close Article Comment

  Disable comments for a published article.

  ## Endpoint
  `POST /cgi-bin/comment/close`

  ## Parameters
  - `msg_data_id` (required): Message data ID from publish response
  - `index` (optional): Article index in multi-article (0-based, default 0)

  ## Response
  ```json
  {
    "errcode": 0,
    "errmsg": "ok"
  }
  ```

  ## Notes
  - Existing comments will be hidden but not deleted
  - Users cannot leave new comments after closing
  - Cannot reopen after closing
  - For single article: index = 0 or omit
  - For multi-article: specify which article to close comments

  ## Warning
  - This action is permanent - comments cannot be reopened
  - Consider carefully before closing
}

script:pre-request {
  const axios = require('axios');
  const baseUrl = bru.getEnvVar('baseUrl');
  const appId = bru.getEnvVar('appId');
  const appSecret = bru.getEnvVar('appSecret');

  const tokenResponse = await axios.post(`${baseUrl}/cgi-bin/stable_token`, {
    grant_type: 'client_credential',
    appid: appId,
    secret: appSecret
  });

  if (tokenResponse.data.access_token) {
    bru.setVar('accessToken', tokenResponse.data.access_token);
    console.log('✓ Access token obtained:', tokenResponse.data.access_token.substring(0, 20) + '....');
  } else {
    console.error('✗ Failed to get access token:', tokenResponse.data);
  }
}

tests {
  test("Status code is 200", function() {
    expect(res.status).to.equal(200);
  });

  test("errcode is 0", function() {
    expect(res.body.errcode).to.equal(0);
  });
}

script:post-response {
  if (res.body.errcode === 0) {
    console.log('✓ Article comments closed successfully');
    console.log('⚠ Warning: Comments cannot be reopened');
  } else {
    console.error('✗ Failed to close comments');
    console.error('Error:', res.body.errcode, res.body.errmsg);
  }
}
